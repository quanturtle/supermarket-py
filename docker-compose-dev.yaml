services:
  db:
    image: timescale/timescaledb-ha:pg17
    restart: always
    container_name: supermarket-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/home/postgres/pgdata/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    container_name: supermarket-backend
    environment:
      IS_PROD: 'False'
      FRONTEND_URL: ${FRONTEND_URL}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${BACKEND_PORT}:8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -s -o /dev/null -w '%{http_code}' http://localhost:${BACKEND_PORT} | grep -q 200"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 15s

  pipeline:
    build: 
      context: .
      dockerfile: Dockerfile
    restart: always
    container_name: supermarket-pipeline
    environment:
      MAGE_DATA_DIR: ${MAGE_DATA_DIR}
      MAGE_DATABASE_CONNECTION_URL: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      GIT_PYTHON_REFRESH: quiet
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${PIPELINE_PORT}:6789"
    healthcheck:
      test: ["CMD-SHELL", "curl -s -o /dev/null -w '%{http_code}' http://localhost:${PIPELINE_PORT} | grep -q 200"]
      interval: 1m30s
      timeout: 15s
      retries: 5
      start_period: 10s
    volumes:
      - ./:/app
      
volumes:
  postgres_data: