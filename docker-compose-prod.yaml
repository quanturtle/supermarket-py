services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    container_name: supermarket-backend
    environment:
      IS_PROD: 'True'
      FRONTEND_URL: '${FRONTEND_URL}'
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${BACKEND_PORT}:8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -s -o /dev/null -w '%{http_code}' http://localhost:${BACKEND_PORT} | grep -q 200"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 15s

  pipeline:
    build: 
      context: .
      dockerfile: Dockerfile
    restart: always
    container_name: supermarket-pipeline
    environment:
      MAGE_DATA_DIR: ${MAGE_DATA_DIR}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${PIPELINE_PORT}:6789"
    healthcheck:
      test: ["CMD-SHELL", "curl -s -o /dev/null -w '%{http_code}' http://localhost:${PIPELINE_PORT} | grep -q 200"]
      interval: 1m30s
      timeout: 15s
      retries: 5
      start_period: 10s
    volumes:
      - ./:/app